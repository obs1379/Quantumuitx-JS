/**********************************************
 * Quantumult X 专用节点风险检测/地理信息脚本
 * 原作者: https://github.com/shuijiao1/Fly
 * 改动: 移除 $httpClient，改用 $task.fetch
 **********************************************/

// 基础配置
let base_url = "https://scamalytics.com/ip/";

// IP地理信息API
var url = "http://ip-api.com/json/";

// 从 QX 环境中获取脚本参数（如节点名）
var inputParams = $environment.params;
var nodeName = inputParams.node || "当前节点";

// 封装 GET 请求函数，兼容 Quantumult X
function httpGet(options, callback) {
  let reqUrl = options.url;
  // 仅使用 url 发起请求，若需 headers 等，可自行扩展
  $task.fetch({
    url: reqUrl,
    method: "GET"
  }).then(
    (response) => {
      // 在 QX 中，response.body 才是返回的主体
      callback(null, response, response.body);
    },
    (reason) => {
      callback(reason.error, null, null);
    }
  );
}

// 先查 IP 地理信息
var requestParams = {
  url: url
};

httpGet(requestParams, (error, response, data) => {
  if (error) {
    let message = "</br></br>🔴 查询超时";
    message = wrapMessage(message);
    $done({
      title: "地理位置查询",
      htmlMessage: message
    });
  } else {
    // 解析并处理地理信息
    let message = data ? json2info(data) : "";
    let ip = JSON.parse(data).query;

    // 再查欺诈指数
    var scamRequestParams = {
      url: base_url + ip
    };
    httpGet(scamRequestParams, (error2, response2, scamData) => {
      if (error2) {
        message = "</br></br>🔴 查询超时";
        message = wrapMessage(message);
        $done({
          title: "地理位置查询",
          htmlMessage: message
        });
      } else {
        // 组合最终信息
        message = message + Display(scamData);
        message =
          message +
          "------------------------------" +
          "</br>" +
          "<font color=#6959CD><b>节点</b> ➟ " +
          nodeName +
          "</font>";

        message = `<p style="text-align: center; font-family: -apple-system; font-size: large; font-weight: thin">` + message + `</p>`;
        $done({
          title: "地理位置查询",
          htmlMessage: message
        });
      }
    });
  }
});

// 美化报错信息
function wrapMessage(msg) {
  return `<p style="text-align: center; font-family: -apple-system; font-size: large; font-weight: bold;">${msg}</p>`;
}

// 解析 ip-api 返回的 JSON
const paras = ["query", "as", "org", "isp", "countryCode", "city", "lon", "lat"];
const paran = [
  "远端IP地址",
  "远端IP ASN",
  "ASN所属机构",
  "远端ISP",
  "远端IP地区",
  "远端IP城市",
  "远端经度",
  "远端纬度"
];

function json2info(cnt) {
  let res = "-------------------------------";
  let obj = JSON.parse(cnt);

  for (let i = 0; i < paras.length; i++) {
    // 如果是 countryCode，就带上国旗
    if (paras[i] === "countryCode") {
      let cc = obj[paras[i]].toUpperCase();
      obj[paras[i]] = obj[paras[i]] + " ⟦" + (flags.get(cc) || "") + "⟧";
    }
    // 拼接信息
    if (obj[paras[i]]) {
      res += `</br><b><font color="">${paran[i]}</font> : </b><font color="">${obj[paras[i]]}</font></br>`;
    }
  }
  return res;
}

// 解析 scamalytics.com 页面内容，提取欺诈指数和风险等级
function Display(cnt) {
  let score = cnt.indexOf(`"score":`) !== -1
    ? cnt.split(`"score":`)[1].split("\n")[0]
    : "NA";
  score = score.replace(/"|,/g, "");
  score = `</br><b><font color="">欺诈指数 </font> : </b><font color="">${score}</font></br>`;

  let risk = cnt.indexOf(`"risk":`) !== -1
    ? cnt.split(`"risk":`)[1].split("\n")[0]
    : "NA";
  risk = risk.replace(/"|,/g, "");
  risk = `</br><b><font color="">风险等级 </font> : </b><font color="">${E2C(risk)}</font></br>`;

  return score + risk;
}

// 把英文风险等级转成中文+图标
function E2C(cnt) {
  let res = "NA";
  if (cnt.indexOf("very high") !== -1) {
    res = "极高风险 🔴";
  } else if (cnt.indexOf("high") !== -1) {
    res = "高风险 ⚠️";
  } else if (cnt.indexOf("medium") !== -1) {
    res = "中风险 🟡";
  } else if (cnt.indexOf("low") !== -1) {
    res = "低风险 ✅";
  }
  return res;
}

// 常用国旗映射表
var flags = new Map([
  ["AC","🇦🇨"],["AE","🇦🇪"],["AF","🇦🇫"],["AI","🇦🇮"],["AL","🇦🇱"],
  ["AM","🇦🇲"],["AQ","🇦🇶"],["AR","🇦🇷"],["AS","🇦🇸"],["AT","🇦🇹"],
  ["AU","🇦🇺"],["AW","🇦🇼"],["AX","🇦🇽"],["AZ","🇦🇿"],["BA","🇧🇦"],
  ["BB","🇧🇧"],["BD","🇧🇩"],["BE","🇧🇪"],["BF","🇧🇫"],["BG","🇧🇬"],
  ["BH","🇧🇭"],["BI","🇧🇮"],["BJ","🇧🇯"],["BM","🇧🇲"],["BN","🇧🇳"],
  ["BO","🇧🇴"],["BR","🇧🇷"],["BS","🇧🇸"],["BT","🇧🇹"],["BV","🇧🇻"],
  ["BW","🇧🇼"],["BY","🇧🇾"],["BZ","🇧🇿"],["CA","🇨🇦"],["CF","🇨🇫"],
  ["CH","🇨🇭"],["CK","🇨🇰"],["CL","🇨🇱"],["CM","🇨🇲"],["CN","🇨🇳"],
  ["CO","🇨🇴"],["CP","🇨🇵"],["CR","🇨🇷"],["CU","🇨🇺"],["CV","🇨🇻"],
  ["CW","🇨🇼"],["CX","🇨🇽"],["CY","🇨🇾"],["CZ","🇨🇿"],["DE","🇩🇪"],
  ["DG","🇩🇬"],["DJ","🇩🇯"],["DK","🇩🇰"],["DM","🇩🇲"],["DO","🇩🇴"],
  ["DZ","🇩🇿"],["EA","🇪🇦"],["EC","🇪🇨"],["EE","🇪🇪"],["EG","🇪🇬"],
  ["EH","🇪🇭"],["ER","🇪🇷"],["ES","🇪🇸"],["ET","🇪🇹"],["EU","🇪🇺"],
  ["FI","🇫🇮"],["FJ","🇫🇯"],["FK","🇫🇰"],["FM","🇫🇲"],["FO","🇫🇴"],
  ["FR","🇫🇷"],["GA","🇬🇦"],["GB","🇬🇧"],["HK","🇭🇰"],["HU","🇭🇺"],
  ["ID","🇮🇩"],["IE","🇮🇪"],["IL","🇮🇱"],["IM","🇮🇲"],["IN","🇮🇳"],
  ["IS","🇮🇸"],["IT","🇮🇹"],["JP","🇯🇵"],["KR","🇰🇷"],["LU","🇱🇺"],
  ["MO","🇲🇴"],["MX","🇲🇽"],["MY","🇲🇾"],["NL","🇳🇱"],["PH","🇵🇭"],
  ["RO","🇷🇴"],["RS","🇷🇸"],["RU","🇷🇺"],["RW","🇷🇼"],["SA","🇸🇦"],
  ["SB","🇸🇧"],["SC","🇸🇨"],["SD","🇸🇩"],["SE","🇸🇪"],["SG","🇸🇬"],
  ["TH","🇹🇭"],["TN","🇹🇳"],["TO","🇹🇴"],["TR","🇹🇷"],["TV","🇹🇻"],
  ["TW","🇨🇳"],["UK","🇬🇧"],["UM","🇺🇲"],["US","🇺🇸"],["UY","🇺🇾"],
  ["UZ","🇺🇿"],["VA","🇻🇦"],["VE","🇻🇪"],["VG","🇻🇬"],["VI","🇻🇮"],
  ["VN","🇻🇳"],["ZA","🇿🇦"]
]);
